name: Build Scan Push

on:
  workflow_dispatch: 

jobs:

  Deploy_App_Service:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    
      #update ENV variables
    env:
      VERSION: ${{ github.sha }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
      WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
      #WizOS Service Account Credentials
      WIZ_OS_ID: ${{ secrets.WIZ_OS_ID}}
      WIZ_OS_SECRET: ${{ secrets.WIZ_OS_SECRET}}
      #WizOS Registry Access
      WIZ_OS_REGISTRY_UNAME: ${{ secrets.WIZ_OS_Registry_UNAME}}
      WIZ_OS_REGISTRY_PWD: ${{ secrets.WIZ_OS_Registry_PWD}}
      WIZ_OS_REGISTRY_URL: ${{ secrets.WIZ_OS_Registry_URL}}
      # Update if using CSATEST
      WIZ_ENV: prod
      WIZ_VULN_POLICY: "Default vulnerabilities policy"
      WIZ_SENSITIVE_DATA_POLICY: "Default sensitive data policy"
      WIZ_SECRETS_POLICY: "Default secrets policy"
      WIZ_IAC_POLICY: "Default IaC policy"
      NAME: app
      DIRECTORY: app

    steps:
      
      # GitHub Actions checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Authenticate to WizOS Registry
      - name: WizOS Auth
        run: echo ${WIZ_OS_REGISTRY_PWD} | docker login --username ${WIZ_OS_REGISTRY_UNAME} --password-stdin ${WIZ_OS_REGISTRY_URL}

      # Build the Docker image
      - name: Build
      #need to update with the WIZOS build steps
        run: docker build --secret id=${WIZ_OS_ID} --secret id=${WIZ_OS_SECRET} -t ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${NAME}:declan1 -file Dockerfile .

      # Download Wiz CLI
      - name: Download Wiz CLI
        run: curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

      # Wiz CLI authentication
      - name: Authenticate to Wiz
        run: sudo -E ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"

      # Wiz CLI image scan
      - name: Wiz CLI image scan
        id: scan
        run: |-
          sudo -E ./wizcli docker scan -i ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${NAME}:${IMAGE_TAG} -p "$WIZ_VULN_POLICY" \
          --driver mountWithLayers --dockerfile "./${DIRECTORY}/Dockerfile" --output wiz-output.json,sarif,true --tag github_action_run_id=${{ github.run_id }}
        continue-on-error: true

      # Wiz CLI IaC scan
      - name: Wiz CLI IaC Scan
        run: sudo -E ./wizcli iac scan --path "." -p "$WIZ_IAC_POLICY" -p "$WIZ_SECRETS_POLICY" --tag github_action_run_id=${{ github.run_id }} -o iac-scan-results.sarif,sarif,true
        continue-on-error: true

      # Wiz CLI directory scan
      - name: Wiz CLI Directory Scan
        run: sudo -E ./wizcli dir scan --path "." -p "$WIZ_VULN_POLICY" -p "$WIZ_SECRETS_POLICY" --tag github_action_run_id=${{ github.run_id }} -o dir-scan-results.sarif,sarif,true
        continue-on-error: true

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region us-east-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com

      - name: Push Docker image
        run: |
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${NAME}:${IMAGE_TAG}

      # Wiz CLI image tag
      - name: Run Wiz CLI image tag
        run: sudo -E ./wizcli docker tag -i ${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${NAME}:${IMAGE_TAG}
        